/// <reference types="cypress"/>

import ordernoncod from '../../support/pageObjects/pageOrderNonCod';

let datatest;

beforeEach(() => {
    cy.loginViaAPI();
    cy.visit('/features/shipment-order');
    cy.fixture('order/dataOrderNonCOD').then(function(Tdata) {
        datatest=Tdata;
    });
});

describe('Negative Case Order',() => {
    it('Negative - Check Data Pengirim',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        cy.wait(3000);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getNotifSimpanOrder().should('be.visible').should('contain',datatest.notifOrderNotComplete);
        order.getErrorNama().should('contain',datatest.emptyField);
        order.getErrorTelepon().should('contain',datatest.emptyField);
        order.getErrorAlamat().should('contain',datatest.emptyField);
        order.getErrorKecamatan().should('contain',datatest.emptyField);
        order.getErrorKodepos().should('contain',datatest.emptyField);
        order.getErrorCabang().should('contain',datatest.emptyField);
    });

    it('Negative - Check Format Nomor Telepon Pengirim',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim).clear().type(datatest.falseNomer);
        order.getErrorTeleponFormat().should('contain',datatest.notifFormatNomer);
    });

    it('Negative - Check Data Penerima',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        cy.wait(3000);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible').should('contain',datatest.notifOrderNotComplete);
        order.getErrorNama().should('contain',datatest.emptyField);
        order.getErrorTelepon().should('contain',datatest.emptyField);
        order.getErrorAlamat().should('contain',datatest.emptyField);
        order.getErrorKecamatan().should('contain',datatest.emptyField);
        order.getErrorKodepos().should('contain',datatest.emptyField);
    });

    it('Negative - Check Format Nomor Telepon Penerima',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.falseNomer);
        order.getErrorTeleponFormat().should('contain',datatest.notifFormatNomer);
    });

    it('Negative - Check Detail Barang',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        cy.wait(3000);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible').should('contain',datatest.notifOrderNotComplete);
        order.getErrorNama().should('contain',datatest.emptyField);
        order.getErrorTelepon().should('contain',datatest.emptyField);
    });

    it('Negative - Check Kurir',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');

        order.getLinkInformasiKurir().click();
        cy.wait(3000);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible').should('contain',datatest.notifPilihKurir);
    });
});

describe('Test Create Order Non COD',() => {
    it('Positive - Edit Order Before Payment',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');

        order.getLinkInformasiKurir().click();
        order.getBtnPilihKurirdanLayanan().should('be.enabled').click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiCepat().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getSectionInfoKurir().should('contain.text',datatest.serviceREG);
        order.getBtnAsuransiPengiriman().click();
        order.getFieldFeeAsuransi().should('have.text',datatest.nilaiAsuransi);
        order.getBtnPackingKayu().click();
        order.getFieldFeePacking().should('have.text',datatest.nilaiPackingKayu);
        order.getFieldCatatan().type(datatest.catatanBarang);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');

        order.getCardOrderSummary().should('be.visible').should('contain',datatest.serviceREG);
        order.getPilihanKurir().click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiUnt().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');
        order.getCardOrderSummary().should('be.visible').should('contain',datatest.serviceSIUNT);
    });

    it('Positive - Delete Order Before Payment',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');

        order.getLinkInformasiKurir().click();
        order.getBtnPilihKurirdanLayanan().should('be.enabled').click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiCepat().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getSectionInfoKurir().should('contain.text',datatest.serviceREG);
        order.getBtnAsuransiPengiriman().click();
        order.getFieldFeeAsuransi().should('have.text',datatest.nilaiAsuransi);
        order.getBtnPackingKayu().click();
        order.getFieldFeePacking().should('have.text',datatest.nilaiPackingKayu);
        order.getFieldCatatan().type(datatest.catatanBarang);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');

        order.getCardOrderSummary().should('be.visible').should('contain',datatest.serviceREG);
        order.getBtnDeleteOrder().click();
        order.getModalKonfimasiDeleteOrder().should('be.visible');
        order.getBtnOkDeleteOrder().click();
        order.getCardOrderSummary().should('be.visible').should('contain','Akan muncul setelah kamu mengisi semua Informasi..');
    });

    it('Positive - Edit Data Pickup should not change the real data',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.pengirimRobot);
        cy.wait(3000);
        cy.contains('robot (robot)').click();
        order.getFieldNamaPengirim().clear().type(datatest.pengirimTobor);
        order.getFieldNomorTelepon().clear().type(datatest.nomerRobot);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatRobot);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.pengirimRobot);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnGunakanHanySekali().click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        order.getSummaryNamaPengirim().should('contain',datatest.pengirimTobor);
        order.getSummaryNomorTelepon().should('contain',datatest.nomerRobot);

        order.getBtnBatalBuatOrder().click();
        order.getModalBatalOrder().should('be.visible');
        order.getBtnYaBatalkan().click();

        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.pengirimRobot);
        cy.wait(3000);
        cy.contains('robot (robot)').click();
        order.getFieldNamaPengirim().should('have.value',datatest.pengirimRobot);
        order.getFieldNomorTelepon().should('have.value',datatest.nomerDropship);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatRobot);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
    });

    it('Positive - Berat Barang menyesuaikan volume',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldPanjangBarang().clear().type('100');
        order.getFieldNamaBarang().click();
        order.getNotifSimpanOrder().should('be.visible').should('contain',datatest.notifBeratBarang);
        order.getFieldBeratBarang().should('have.value','1.667');
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');
    });

    it('Positive - Create New Order Non COD',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnCekKembali().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('not.be.visible');
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');

        order.getLinkInformasiKurir().click();
        order.getBtnPilihKurirdanLayanan().should('be.enabled').click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiCepat().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getSectionInfoKurir().should('contain.text',datatest.serviceREG);
        order.getBtnAsuransiPengiriman().click();
        order.getFieldFeeAsuransi().should('have.text',datatest.nilaiAsuransi);
        order.getBtnPackingKayu().click();
        order.getFieldFeePacking().should('have.text',datatest.nilaiPackingKayu);
        order.getFieldCatatan().type(datatest.catatanBarang);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');

        order.getCardOrderSummary().should('be.visible');
        order.getBtnAturPengiriman().click();
        order.getModalKonfirmasiPengiriman().should('be.visible');
        order.getBtnYakinPengiriman().click();
        order.getModalAturPengiriman().should('be.visible');
        order.getRadioBtnPickup().click();
        order.getFieldTanggalPickup().should('be.visible');
        order.getFieldWaktuPickup().should('be.visible');

        order.getBtnLanjutPembayaran().click();
        order.getModalPembayaran().should('be.visible');
        order.getBtnBayar().should('not.be.enabled');
        order.getOpsiBCA().should('not.be.enabled');
        order.getOpsiInvoice().should('not.be.enabled');
        order.getOpsiQRIS().click();
        order.getBtnBayar().should('be.enabled').click();
        cy.wait(2000);
        order.getNotifSimpanOrder().should('be.visible').should('contain','Success Create Order');
        order.getModalMenungguPembayaran().should('be.visible');
        cy.wait(4000);
        order.getNotifSimpanOrder().should('not.exist');
        order.getBtnCloseModalPembayaran().click();

        order.getListOrderPertama().click();
        order.getFieldMetodePembayaran().should('contain',datatest.payQris);
        order.getNamaPengirim().should('contain',datatest.namaPengirim);
        order.getTelponPengirim().should('contain',datatest.noPengirim);
        order.getEmailPengirim().should('contain','-');
        order.getAlamatPengirim().should('contain',datatest.alamatPengirim2);
        order.getCabangPengirim().should('contain',datatest.namaCabang);
        order.getDepartemenPengirim().should('contain',datatest.namaDepartemen);
        order.getNamaPenerima().should('contain',datatest.namaPenerima2);
        order.getTeleponPenerima().should('contain',datatest.nomerPenerima);
        order.getEmailPenerima().should('contain',datatest.emailPenerima);
        order.getAlamatPenerima().should('contain',datatest.alamatPenerima2);
        order.getFieldDetailBarang().click();
        order.getJenisBarang().should('contain',datatest.tipePackage);
        order.getBeratBarang().should('contain','1000 Gram');
        order.getTotalHarga().should('contain','Rp12,000');
        order.getDimensiBarang().should('contain',datatest.dimensiTotal);
        order.getNamaBarang().should('contain',datatest.namaBarang);
    });
});

describe('Test Create Order Non COD as Draft',() => {
    it('Positive - Create New Order Non COD as Draft',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnCekKembali().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('not.be.visible');
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');

        order.getLinkInformasiKurir().click();
        order.getBtnPilihKurirdanLayanan().should('be.enabled').click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiCepat().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getSectionInfoKurir().should('contain.text',datatest.serviceREG);
        order.getBtnAsuransiPengiriman().click();
        order.getFieldFeeAsuransi().should('have.text',datatest.nilaiAsuransi);
        order.getBtnPackingKayu().click();
        order.getFieldFeePacking().should('have.text',datatest.nilaiPackingKayu);
        order.getFieldCatatan().type(datatest.catatanBarang);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');
        order.getBtnSimpanDraft().click();
        order.getModalSimpanDraft().should('be.visible');
        order.getBtnYaSayaYakin().click();
        order.getNotifSimpanOrder().should('be.visible');
        order.getStatusPertama().should('contain','Entry');
        order.getBtnOpsiTindakan().click();
        order.getListTindakanPertama().should('contain','Edit');
    });

    it('Positive - Edit Draft Order Non COD',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnCekKembali().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('not.be.visible');
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');

        order.getLinkInformasiKurir().click();
        order.getBtnPilihKurirdanLayanan().should('be.enabled').click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiCepat().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getSectionInfoKurir().should('contain.text',datatest.serviceREG);
        order.getBtnAsuransiPengiriman().click();
        order.getFieldFeeAsuransi().should('have.text',datatest.nilaiAsuransi);
        order.getBtnPackingKayu().click();
        order.getFieldFeePacking().should('have.text',datatest.nilaiPackingKayu);
        order.getFieldCatatan().type(datatest.catatanBarang);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');
        order.getBtnSimpanDraft().click();
        order.getModalSimpanDraft().should('be.visible');
        order.getBtnYaSayaYakin().click();
        order.getNotifSimpanOrder().should('be.visible');

        order.getStatusPertama().should('contain','Entry');
        order.getBtnOpsiTindakan().click();
        order.getListTindakanPertama().should('contain','Edit');
        order.getListOrderPertama().click();
        order.getBtnTindakan().click();
        order.getBtnEditOrderEntry().click();
        
        order.getFieldNamaPengirim().clear().type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().clear().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnYaSayaYakin().click();

        order.getFieldNomorTeleponPenerima().clear().type(datatest.editNomerPenerima);
        order.getBtnSimpanOrder().click();

        order.getLinkInformasiPaket().click();
        order.getFieldBeratBarang().clear().type('2');

        order.getLinkInformasiKurir().click();
        cy.wait(3000);
        order.getPilihanKurir().click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiUnt().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');
        order.getCardOrderSummary().should('be.visible').should('contain',datatest.serviceSIUNT);

        order.getBtnSimpanDraft().click();
        order.getModalSimpanDraft().should('be.visible');
        order.getBtnYaSayaYakin().click();
        order.getNotifSimpanOrder().should('be.visible');

        order.getListOrderPertama().click();
        order.getFieldMetodePembayaran().should('contain','-');
        order.getNamaPengirim().should('contain',datatest.namaPengirim);
        order.getTelponPengirim().should('contain',datatest.noPengirim);
        order.getEmailPengirim().should('contain','-');
        order.getAlamatPengirim().should('contain',datatest.alamatPengirim2);
        order.getCabangPengirim().should('contain',datatest.namaCabang);
        order.getDepartemenPengirim().should('contain',datatest.namaDepartemen);
        order.getNamaPenerima().should('contain',datatest.namaPenerima2);
        order.getTeleponPenerima().should('contain',datatest.editNomerPenerima);
        order.getEmailPenerima().should('contain',datatest.emailPenerima);
        order.getAlamatPenerima().should('contain',datatest.alamatPenerima2);
        order.getFieldDetailBarang().click();
        order.getJenisBarang().should('contain',datatest.tipePackage);
        order.getBeratBarang().should('contain','2000 Gram');
        order.getTotalHarga().should('contain','Rp22,000');
        order.getDimensiBarang().should('contain',datatest.dimensiTotal);
        order.getNamaBarang().should('contain',datatest.namaBarang);
    });

    it('Positive - Create New Order Non COD as Draft and Pickup Request',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnCekKembali().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('not.be.visible');
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');

        order.getLinkInformasiKurir().click();
        order.getBtnPilihKurirdanLayanan().should('be.enabled').click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiCepat().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getSectionInfoKurir().should('contain.text',datatest.serviceREG);
        order.getBtnAsuransiPengiriman().click();
        order.getFieldFeeAsuransi().should('have.text',datatest.nilaiAsuransi);
        order.getBtnPackingKayu().click();
        order.getFieldFeePacking().should('have.text',datatest.nilaiPackingKayu);
        order.getFieldCatatan().type(datatest.catatanBarang);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');
        order.getBtnSimpanDraft().click();
        order.getModalSimpanDraft().should('be.visible');
        order.getBtnYaSayaYakin().click();
        order.getNotifSimpanOrder().should('be.visible');
        order.getStatusPertama().should('contain','Entry');
        order.getBtnOpsiTindakan().click();
        order.getListTindakanPertama().should('contain','Edit');
        order.getBtnRequestPickUpEntry().click();
        order.getModalAturPengiriman().should('be.visible').should('contain',datatest.headerAturPengiriman);
        order.getRadioBtnPickup().click();
        order.getFieldTanggalPickup().should('be.visible');
        order.getFieldWaktuPickup().should('be.visible');
        order.getBtnLanjutPembayaran().click();
        order.getModalPembayaran().should('be.visible');
        order.getBtnBayar().should('not.be.enabled');
        order.getOpsiQRIS().click();
        order.getBtnBayar().should('be.enabled').click();
        cy.wait(2000);
        order.getModalMenungguPembayaran().should('be.visible');
        cy.wait(2000);
        order.getBtnCloseModalPembayaranEntry().click();
    });

    it('Positive - Create New Order Non COD as Draft and Cancel Request',() => {
        const order = new ordernoncod();
        order.getBtnTambahOrder().should('be.visible');
        order.getBtnTambahOrder().click();
        order.getHeaderBuatOrder().should('contain',datatest.headerFormOrder);
        order.getBtnPinAlamat().should('be.disabled');
        order.getFieldNamaPengirim().should('be.enabled').type(datatest.namaPengirim);
        cy.wait(3000);
        order.getOptionTesterClodeo().click();
        order.getFieldNamaPengirim().should('have.value',datatest.namaPengirim);
        order.getFieldNomorTelepon().should('have.value',datatest.noPengirim);
        order.getFieldAlamatDetail().should('have.value',datatest.alamatPengirim);
        order.getFieldKecamatan().should('have.value',datatest.kecamatanPengirim);
        order.getKodePosSelected().should('contain',datatest.kodeposPengirim);
        order.getBtnPinAlamat().should('be.enabled');
        order.getFieldNamaCabang().should('have.value',datatest.namaCabang);
        order.getFieldNamaDepartement().type(datatest.namaDepartemen).should('have.value',datatest.namaDepartemen);
        cy.wait(3000);
        order.getOpsiDepartemenOwner().click();
        order.getFieldNamaDepartement().should('have.value',datatest.namaDepartemen);
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('be.visible');
        order.getBtnCekKembali().should('be.enabled').click();
        order.getModalConfirmSimpanPickup().should('not.be.visible');
        order.getBtnSimpanPickup().should('be.enabled').click();
        order.getBtnYaSayaYakin().click();

        order.getFieldDropshipPengirim().should('not.exist');
        order.getFieldDropshipNomorTelepon().should('not.exist');
        order.getBtnIsDropship().click();
        order.getFieldDropshipPengirim().should('be.visible').type(datatest.namaDropship);
        order.getFieldDropshipNomorTelepon().should('be.visible').type(datatest.nomerDropship);
        order.getFieldNamaPenerima().type(datatest.namaPenerima);
        cy.wait(3000);
        order.getOpsiPenerima1().click();
        order.getFieldNomorTeleponPenerima().clear().type(datatest.nomerPenerima);
        order.getFieldAlamatDetailPenerima().should('have.value',datatest.alamatPenerima);
        order.getFieldKecamataPenerima().should('have.value',datatest.kecamatanPenerima);
        order.getKodePosPenerimaSelected().should('contain',datatest.kodeposPenerima);
        order.getBtnPinAlamatPenerima().should('be.enabled');

        order.getLinkInformasiPaket().click();
        order.getTitleFieldJenisPaket().should('be.visible');
        order.getFieldTotalHarga().type(datatest.hargaBarang);
        order.getFieldBeratBarang().should('not.have.value','0');
        order.getFieldPanjangBarang().type(datatest.dimensiBarang);
        order.getFieldLebarBarang().type(datatest.dimensiBarang);
        order.getFieldTinggiBarang().type(datatest.dimensiBarang);
        order.getFieldNamaBarang().type(datatest.namaBarang);
        order.getFieldQuantityBarang().should('not.have.value','0');

        order.getLinkInformasiKurir().click();
        order.getBtnPilihKurirdanLayanan().should('be.enabled').click();
        order.getHeaderModalPilihKurir().should('contain',datatest.headerPilihKurir);
        order.getOpsiKurirSiCepat().click();
        order.getCheckBoxCheked().should('be.visible');
        order.getBtnSimpanKurir().should('be.enabled').click();
        order.getSectionInfoKurir().should('contain.text',datatest.serviceREG);
        order.getBtnAsuransiPengiriman().click();
        order.getFieldFeeAsuransi().should('have.text',datatest.nilaiAsuransi);
        order.getBtnPackingKayu().click();
        order.getFieldFeePacking().should('have.text',datatest.nilaiPackingKayu);
        order.getFieldCatatan().type(datatest.catatanBarang);
        order.getBtnSimpanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');
        order.getBtnSimpanDraft().click();
        order.getModalSimpanDraft().should('be.visible');
        order.getBtnYaSayaYakin().click();
        order.getNotifSimpanOrder().should('be.visible');

        order.getStatusPertama().should('contain','Entry');
        order.getBtnOpsiTindakan().click();
        order.getListTindakanPertama().should('contain','Edit');
        order.getBtnCancelOrderEntry().click();

        order.getModalCancelEntry().should('be.visible').should('contain','Cancel Order');
        order.getBtnYaBatalkanOrder().click();
        order.getNotifSimpanOrder().should('be.visible');

        order.getStatusPertama().should('contain','Cancelled');
    });
});